/*
 Copyright (c) 2013-present Cumulocity GmbH, Duesseldorf, Germany and/or its affiliates and/or their licensors.

 Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
 file except in compliance with the License. You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software distributed under the
 License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 either express or implied.
 See the License for the specific language governing permissions and limitations under the License.
 */
 
package apamax.analyticsbuilder.samples;

using apama.analyticsbuilder.BlockBase;
using apama.analyticsbuilder.Activation;

/**
 * Difference
 *
 * Calculates the absolute and signed differences between the connected inputs.
 *
 * Only generates an output if both the inputs receive a value.
 *
 * @$blockCategory Calculations
 */
event Difference {
	
	/**BlockBase object.
	 *
	 * This is initialized by the framework when the block is required for a model.
	 */
	BlockBase $base;
	
	/**
	 * This action receives the input values and contains the logic of the block. 
	 *
	 * It calculates the absolute and signed differences between the inputs in this method. 
	 *  
	 * @param $activation The current activation, contextual information required when generating a block output. Blocks should only use the
	 * <tt>Activation</tt> object passed to them from the framework, never creating their own or holding on to an <tt>Activation</tt> object.
	 * @param $input_value1 First input to the block.
	 * @param $input_value2 Second input to the block.
	 *
	 * @$inputName value1 Value 1
	 * @$inputName value2 Value 2
	 */
	action $process(Activation $activation, optional<float> $input_value1, optional<float> $input_value2) {
		ifpresent $input_value1, $input_value2{		// As both the inputs of the blocks are of optional type, process only if both of them have a value.
			float result :=  $input_value1-$input_value2;
			$setOutput_absoluteDifference($activation, result.abs());
			$setOutput_signedDifference($activation, result);
		}
	}
	
	/**
	 * Absolute Difference
	 *
	 * The absolute difference of the inputs.
	 */
	action<Activation,float> $setOutput_absoluteDifference;		// This is initialized by the framework. It sets the output of the block and may trigger any blocks connected to this output.
	
	/**
	 * Signed Difference
	 *
	 * The signed difference of the inputs. Positive if the Value 1 input is larger than the Value 2 input.
	 */
	action<Activation,float> $setOutput_signedDifference;	// This is initialized by the framework. It sets the output of the block and may trigger any blocks connected to this output.
}